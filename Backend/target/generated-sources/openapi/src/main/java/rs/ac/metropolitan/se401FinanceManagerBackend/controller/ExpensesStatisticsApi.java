/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (3.2.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package rs.ac.metropolitan.se401FinanceManagerBackend.controller;

import rs.ac.metropolitan.se401FinanceManagerBackend.model.ExpenseStatisticsResponse;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;

@Validated
@Api(value = "ExpensesStatistics", description = "the ExpensesStatistics API")
public interface ExpensesStatisticsApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    @ApiOperation(value = "Expenses statistics by month", nickname = "getExpensesStatisticsByMonth", notes = "Provides statistic of expenses by month", response = ExpenseStatisticsResponse.class, authorizations = {
        @Authorization(value = "BasicAuth")
    }, tags={ "Expenses statistics", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Expenses Statistics by month", response = ExpenseStatisticsResponse.class) })
    @RequestMapping(value = "/expenses-by-month/{year}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ExpenseStatisticsResponse> _getExpensesStatisticsByMonth(@ApiParam(value = "Year",required=true) @PathVariable("year") Integer year) {
        return getExpensesStatisticsByMonth(year);
    }

    // Override this method
    default ResponseEntity<ExpenseStatisticsResponse> getExpensesStatisticsByMonth(Integer year) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "null");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "Expenses statistics by shop", nickname = "getExpensesStatisticsByShop", notes = "Provides statistic of expenses by shop", response = ExpenseStatisticsResponse.class, authorizations = {
        @Authorization(value = "BasicAuth")
    }, tags={ "Expenses statistics", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Expenses Statistics by shop", response = ExpenseStatisticsResponse.class) })
    @RequestMapping(value = "/expenses-by-shop",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ExpenseStatisticsResponse> _getExpensesStatisticsByShop() {
        return getExpensesStatisticsByShop();
    }

    // Override this method
    default ResponseEntity<ExpenseStatisticsResponse> getExpensesStatisticsByShop() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "null");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    @ApiOperation(value = "Expenses statistics by year", nickname = "getExpensesStatisticsByYear", notes = "Provides statistic of expenses by year", response = ExpenseStatisticsResponse.class, authorizations = {
        @Authorization(value = "BasicAuth")
    }, tags={ "Expenses statistics", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Expenses Statistics by year", response = ExpenseStatisticsResponse.class) })
    @RequestMapping(value = "/expenses-by-year",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<ExpenseStatisticsResponse> _getExpensesStatisticsByYear() {
        return getExpensesStatisticsByYear();
    }

    // Override this method
    default ResponseEntity<ExpenseStatisticsResponse> getExpensesStatisticsByYear() {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    ApiUtil.setExampleResponse(request, "application/json", "null");
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
